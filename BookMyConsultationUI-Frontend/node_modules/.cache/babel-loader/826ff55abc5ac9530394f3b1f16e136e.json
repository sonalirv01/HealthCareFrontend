{"ast":null,"code":"import { createContext, useMemo, createElement, useContext } from 'react';\nimport { func, oneOfType, object, string, element, arrayOf } from 'prop-types';\nvar MuiPickersContext = createContext(null);\nvar MuiPickersUtilsProvider = function MuiPickersUtilsProvider(_ref) {\n  var Utils = _ref.utils,\n    children = _ref.children,\n    locale = _ref.locale,\n    libInstance = _ref.libInstance;\n  var utils = useMemo(function () {\n    return new Utils({\n      locale: locale,\n      instance: libInstance\n    });\n  }, [Utils, libInstance, locale]);\n  return createElement(MuiPickersContext.Provider, {\n    value: utils,\n    children: children\n  });\n};\nprocess.env.NODE_ENV !== \"production\" ? MuiPickersUtilsProvider.propTypes = {\n  utils: func.isRequired,\n  locale: oneOfType([object, string]),\n  children: oneOfType([element.isRequired, arrayOf(element.isRequired)]).isRequired\n} : void 0;\nvar checkUtils = function checkUtils(utils) {\n  if (!utils) {\n    // tslint:disable-next-line\n    throw new Error('Can not find utils in context. You either a) forgot to wrap your component tree in MuiPickersUtilsProvider; or b) mixed named and direct file imports.  Recommendation: use named imports from the module index.');\n  }\n};\nfunction useUtils() {\n  var utils = useContext(MuiPickersContext);\n  checkUtils(utils);\n  return utils;\n}\nexport { MuiPickersUtilsProvider as M, MuiPickersContext as a, useUtils as u };","map":{"version":3,"sources":["../../src/MuiPickersUtilsProvider.tsx","../../src/_shared/hooks/useUtils.ts"],"names":["MuiPickersContext","React","MuiPickersUtilsProvider","utils","Utils","children","locale","libInstance","instance","React.createElement","propTypes","PropTypes","isRequired","checkUtils","Error","useUtils","useContext"],"mappings":";;IAKaA,iBAAiB,GAAGC,aAAAA,CAA0D,IAA1DA,CAA1B;AASA,IAAMC,uBAA+D,GAAG,SAAlEA,uBAAkE,CAAA,IAAA,EAKzE;MAJGE,KAIH,GAAA,IAAA,CAJJD,KAII;IAHJE,QAGI,GAAA,IAAA,CAHJA,QAGI;IAFJC,MAEI,GAAA,IAAA,CAFJA,MAEI;IADJC,WACI,GAAA,IAAA,CADJA,WACI;MACEJ,KAAK,GAAG,OAAA,CAAc,YAAA;WAAM,IAAIC,KAAJ,CAAU;MAAEE,MAAM,EAANA,MAAF;MAAUE,QAAQ,EAAED;KAA9B,CAAN;GAAd,EAAkE,CAC9EH,KAD8E,EAE9EG,WAF8E,EAG9ED,MAH8E,CAAlE,CAAd;SAMOG,aAAAA,CAAC,iBAADA,CAAmB,QAAnBA,EAAAA;IAA4B,KAAK,EAAEN,KAAnCM;IAA0C,QAAQ,EAAEJ;IAA3D;CAZK;AAeP,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,GAAA,uBAAuB,CAACK,SAAxB,GAAoC;EAClCP,KAAK,EAAEQ,IAAAA,CAAeC,UADY;EAElCN,MAAM,EAAEK,SAAAA,CAAoB,CAACA,MAAD,EAAmBA,MAAnB,CAApBA,CAF0B;EAGlCN,QAAQ,EAAEM,SAAAA,CAAoB,CAC5BA,OAAAA,CAAkBC,UADU,EAE5BD,OAAAA,CAAkBA,OAAAA,CAAkBC,UAApCD,CAF4B,CAApBA,CAAAA,CAGPC;CANL,GAAA,KAAA,CAAA;ACxBO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACV,KAAD,EAA6D;MACjF,CAACA,KAAL,EAAY;;UAEJ,IAAIW,KAAJ,CACJ,kNADI,CAAN;;CAHG;AASA,SAASC,QAAT,CAAA,EAAoB;MACnBZ,KAAK,GAAGa,UAAU,CAAChB,iBAAD,CAAxB;EACAa,UAAU,CAACV,KAAD,CAAVU;SAEOV,KAAP","sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { IUtils } from '@date-io/core/IUtils';\nimport { MaterialUiPickersDate } from './typings/date';\n\nexport const MuiPickersContext = React.createContext<IUtils<MaterialUiPickersDate> | null>(null);\n\nexport interface MuiPickersUtilsProviderProps {\n  utils: any;\n  children: React.ReactNode;\n  locale?: any;\n  libInstance?: any;\n}\n\nexport const MuiPickersUtilsProvider: React.FC<MuiPickersUtilsProviderProps> = ({\n  utils: Utils,\n  children,\n  locale,\n  libInstance,\n}) => {\n  const utils = React.useMemo(() => new Utils({ locale, instance: libInstance }), [\n    Utils,\n    libInstance,\n    locale,\n  ]);\n\n  return <MuiPickersContext.Provider value={utils} children={children} />;\n};\n\nMuiPickersUtilsProvider.propTypes = {\n  utils: PropTypes.func.isRequired,\n  locale: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  children: PropTypes.oneOfType([\n    PropTypes.element.isRequired,\n    PropTypes.arrayOf(PropTypes.element.isRequired),\n  ]).isRequired,\n};\n\nexport default MuiPickersUtilsProvider;\n","import { useContext } from 'react';\nimport { IUtils } from '@date-io/core/IUtils';\nimport { MaterialUiPickersDate } from '../../typings/date';\nimport { MuiPickersContext } from '../../MuiPickersUtilsProvider';\n\nexport const checkUtils = (utils: IUtils<MaterialUiPickersDate> | null | undefined) => {\n  if (!utils) {\n    // tslint:disable-next-line\n    throw new Error(\n      'Can not find utils in context. You either a) forgot to wrap your component tree in MuiPickersUtilsProvider; or b) mixed named and direct file imports.  Recommendation: use named imports from the module index.'\n    );\n  }\n};\n\nexport function useUtils() {\n  const utils = useContext(MuiPickersContext);\n  checkUtils(utils);\n\n  return utils!;\n}\n"]},"metadata":{},"sourceType":"module"}