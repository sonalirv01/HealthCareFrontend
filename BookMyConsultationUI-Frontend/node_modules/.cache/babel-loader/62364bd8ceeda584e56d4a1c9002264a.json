{"ast":null,"code":"import axios from 'axios';\n\n// Create an axios instance with default config\nconst api = axios.create({\n  baseURL: '/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add request interceptor to include auth token\napi.interceptors.request.use(config => {\n  const token = sessionStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// Add response interceptor for error handling\napi.interceptors.response.use(response => response, error => {\n  const {\n    response\n  } = error;\n  if (response && response.status === 401) {\n    // Handle unauthorized (token expired)\n    sessionStorage.removeItem('token');\n    window.dispatchEvent(new Event('logout'));\n  }\n  return Promise.reject(error);\n});\n\n// Auth-related API calls\nexport const authAPI = {\n  login: credentials => api.post('/users/login', credentials),\n  register: userData => api.post('/users/register', userData)\n};\n\n// Doctors-related API calls\nexport const doctorsAPI = {\n  getAllDoctors: () => api.get('/doctors'),\n  getDoctorById: id => api.get(`/doctors/${id}`)\n};\n\n// Appointments-related API calls\nexport const appointmentsAPI = {\n  getAppointments: () => api.get('/appointments'),\n  bookAppointment: appointmentData => api.post('/appointments', appointmentData),\n  rateAppointment: ratingData => api.post('/ratings', ratingData)\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","timeout","headers","interceptors","request","use","config","token","sessionStorage","getItem","Authorization","error","Promise","reject","response","status","removeItem","window","dispatchEvent","Event","authAPI","login","credentials","post","register","userData","doctorsAPI","getAllDoctors","get","getDoctorById","id","appointmentsAPI","getAppointments","bookAppointment","appointmentData","rateAppointment","ratingData"],"sources":["/Users/macbook/Downloads/HealthCareFrontend/BookMyConsultationUI-Frontend/src/util/fetch.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Create an axios instance with default config\r\nconst api = axios.create({\r\n  baseURL: '/api',\r\n  timeout: 10000,\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\n// Add request interceptor to include auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = sessionStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\n// Add response interceptor for error handling\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    const { response } = error;\r\n    if (response && response.status === 401) {\r\n      // Handle unauthorized (token expired)\r\n      sessionStorage.removeItem('token');\r\n      window.dispatchEvent(new Event('logout'));\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Auth-related API calls\r\nexport const authAPI = {\r\n  login: (credentials) => api.post('/users/login', credentials),\r\n  register: (userData) => api.post('/users/register', userData),\r\n};\r\n\r\n// Doctors-related API calls\r\nexport const doctorsAPI = {\r\n  getAllDoctors: () => api.get('/doctors'),\r\n  getDoctorById: (id) => api.get(`/doctors/${id}`),\r\n};\r\n\r\n// Appointments-related API calls\r\nexport const appointmentsAPI = {\r\n  getAppointments: () => api.get('/appointments'),\r\n  bookAppointment: (appointmentData) => api.post('/appointments', appointmentData),\r\n  rateAppointment: (ratingData) => api.post('/ratings', ratingData),\r\n};\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,MAAM;EACfC,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;EAC7C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;;AAED;AACAb,GAAG,CAACK,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC1BS,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EACT,MAAM;IAAEG;EAAS,CAAC,GAAGH,KAAK;EAC1B,IAAIG,QAAQ,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;IACvC;IACAP,cAAc,CAACQ,UAAU,CAAC,OAAO,CAAC;IAClCC,MAAM,CAACC,aAAa,CAAC,IAAIC,KAAK,CAAC,QAAQ,CAAC,CAAC;EAC3C;EACA,OAAOP,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMS,OAAO,GAAG;EACrBC,KAAK,EAAGC,WAAW,IAAKxB,GAAG,CAACyB,IAAI,CAAC,cAAc,EAAED,WAAW,CAAC;EAC7DE,QAAQ,EAAGC,QAAQ,IAAK3B,GAAG,CAACyB,IAAI,CAAC,iBAAiB,EAAEE,QAAQ;AAC9D,CAAC;;AAED;AACA,OAAO,MAAMC,UAAU,GAAG;EACxBC,aAAa,EAAEA,CAAA,KAAM7B,GAAG,CAAC8B,GAAG,CAAC,UAAU,CAAC;EACxCC,aAAa,EAAGC,EAAE,IAAKhC,GAAG,CAAC8B,GAAG,CAAC,YAAYE,EAAE,EAAE;AACjD,CAAC;;AAED;AACA,OAAO,MAAMC,eAAe,GAAG;EAC7BC,eAAe,EAAEA,CAAA,KAAMlC,GAAG,CAAC8B,GAAG,CAAC,eAAe,CAAC;EAC/CK,eAAe,EAAGC,eAAe,IAAKpC,GAAG,CAACyB,IAAI,CAAC,eAAe,EAAEW,eAAe,CAAC;EAChFC,eAAe,EAAGC,UAAU,IAAKtC,GAAG,CAACyB,IAAI,CAAC,UAAU,EAAEa,UAAU;AAClE,CAAC;AAED,eAAetC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module"}